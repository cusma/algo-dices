{
    "hints": {},
    "source": {
        "approval": "I3ByYWdtYSB2ZXJzaW9uIDgKaW50Y2Jsb2NrIDAgMSA2IDIKYnl0ZWNibG9jayAweDYyNjU2MTYzNmY2ZTVmNjE3MDcwNWY2OTY0IDB4NzI2MTZlNjQ2ZjZkNmU2NTczNzM1ZjcyNmY3NTZlNjQgMHgwNjgxMDEKdHhuIE51bUFwcEFyZ3MKaW50Y18wIC8vIDAKPT0KYm56IG1haW5fbDgKdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMApwdXNoYnl0ZXMgMHhmZjg0NDYyNSAvLyAiYm9va19kaWNlc19yb2xsKHVpbnQ2NCl2b2lkIgo9PQpibnogbWFpbl9sNwp0eG5hIEFwcGxpY2F0aW9uQXJncyAwCnB1c2hieXRlcyAweDQ4MDNlYmExIC8vICJyb2xsX2RpY2VzKGFwcGxpY2F0aW9uLHVpbnQ4W10pdWludDhbXSIKPT0KYm56IG1haW5fbDYKdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMApwdXNoYnl0ZXMgMHgyMTc4YTU0MCAvLyAiY3JlYXRlKGFwcGxpY2F0aW9uKXZvaWQiCj09CmJueiBtYWluX2w1CmVycgptYWluX2w1Ogp0eG4gT25Db21wbGV0aW9uCmludGNfMCAvLyBOb09wCj09CnR4biBBcHBsaWNhdGlvbklECmludGNfMCAvLyAwCj09CiYmCmFzc2VydAp0eG5hIEFwcGxpY2F0aW9uQXJncyAxCmludGNfMCAvLyAwCmdldGJ5dGUKY2FsbHN1YiBjcmVhdGVfNQppbnRjXzEgLy8gMQpyZXR1cm4KbWFpbl9sNjoKdHhuIE9uQ29tcGxldGlvbgppbnRjXzAgLy8gTm9PcAo9PQp0eG4gQXBwbGljYXRpb25JRAppbnRjXzAgLy8gMAohPQomJgphc3NlcnQKdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMQppbnRjXzAgLy8gMApnZXRieXRlCnN0b3JlIDAKdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMgpzdG9yZSAxCmxvYWQgMApsb2FkIDEKY2FsbHN1YiByb2xsZGljZXNfNApzdG9yZSAyCnB1c2hieXRlcyAweDE1MWY3Yzc1IC8vIDB4MTUxZjdjNzUKbG9hZCAyCmNvbmNhdApsb2cKaW50Y18xIC8vIDEKcmV0dXJuCm1haW5fbDc6CnR4biBPbkNvbXBsZXRpb24KaW50Y18wIC8vIE5vT3AKPT0KdHhuIEFwcGxpY2F0aW9uSUQKaW50Y18wIC8vIDAKIT0KJiYKYXNzZXJ0CnR4bmEgQXBwbGljYXRpb25BcmdzIDEKYnRvaQpjYWxsc3ViIGJvb2tkaWNlc3JvbGxfMwppbnRjXzEgLy8gMQpyZXR1cm4KbWFpbl9sODoKdHhuIE9uQ29tcGxldGlvbgppbnRjXzEgLy8gT3B0SW4KPT0KYm56IG1haW5fbDEwCmVycgptYWluX2wxMDoKdHhuIEFwcGxpY2F0aW9uSUQKaW50Y18wIC8vIDAKIT0KYXNzZXJ0CmNhbGxzdWIgb3B0aW5fMAppbnRjXzEgLy8gMQpyZXR1cm4KCi8vIG9wdF9pbgpvcHRpbl8wOgp0eG4gU2VuZGVyCmJ5dGVjXzEgLy8gInJhbmRvbW5lc3Nfcm91bmQiCmludGNfMCAvLyAwCmFwcF9sb2NhbF9wdXQKcmV0c3ViCgovLyBnZXRfcmFuZG9tbmVzcwpnZXRyYW5kb21uZXNzXzE6CnR4biBTZW5kZXIKYnl0ZWNfMSAvLyAicmFuZG9tbmVzc19yb3VuZCIKYXBwX2xvY2FsX2dldApzdG9yZSAxNgp0eG4gU2VuZGVyCnN0b3JlIDE3CmxvYWQgMTcKbGVuCml0b2IKZXh0cmFjdCA2IDAKbG9hZCAxNwpjb25jYXQKc3RvcmUgMTcKaXR4bl9iZWdpbgppbnRjXzIgLy8gYXBwbAppdHhuX2ZpZWxkIFR5cGVFbnVtCmJ5dGVjXzAgLy8gImJlYWNvbl9hcHBfaWQiCmFwcF9nbG9iYWxfZ2V0Cml0eG5fZmllbGQgQXBwbGljYXRpb25JRApwdXNoYnl0ZXMgMHg0N2MyMGMyMyAvLyAibXVzdF9nZXQodWludDY0LGJ5dGVbXSlieXRlW10iCml0eG5fZmllbGQgQXBwbGljYXRpb25BcmdzCmxvYWQgMTYKaXRvYgppdHhuX2ZpZWxkIEFwcGxpY2F0aW9uQXJncwpsb2FkIDE3Cml0eG5fZmllbGQgQXBwbGljYXRpb25BcmdzCmludGNfMCAvLyAwCml0eG5fZmllbGQgRmVlCml0eG5fc3VibWl0Cml0eG4gTGFzdExvZwpleHRyYWN0IDQgMApyZXRzdWIKCi8vIGlzX3ZhbGlkX2ZhY2VzCmlzdmFsaWRmYWNlc18yOgpzdG9yZSAxOApsb2FkIDE4CmludGNfMyAvLyAyCj09CmxvYWQgMTgKcHVzaGludCA0IC8vIDQKPT0KfHwKbG9hZCAxOAppbnRjXzIgLy8gNgo9PQp8fApsb2FkIDE4CnB1c2hpbnQgOCAvLyA4Cj09Cnx8CmxvYWQgMTgKcHVzaGludCAxMCAvLyAxMAo9PQp8fApsb2FkIDE4CnB1c2hpbnQgMTIgLy8gMTIKPT0KfHwKbG9hZCAxOApwdXNoaW50IDIwIC8vIDIwCj09Cnx8CnJldHN1YgoKLy8gYm9va19kaWNlc19yb2xsCmJvb2tkaWNlc3JvbGxfMzoKc3RvcmUgMTUKbG9hZCAxNQpnbG9iYWwgUm91bmQKPgovLyBEaWNlcyByb2xsIHJvdW5kIG11c3QgYmUgaW4gdGhlIGZ1dHVyZS4KYXNzZXJ0CnR4biBTZW5kZXIKYnl0ZWNfMSAvLyAicmFuZG9tbmVzc19yb3VuZCIKbG9hZCAxNQphcHBfbG9jYWxfcHV0CnJldHN1YgoKLy8gcm9sbF9kaWNlcwpyb2xsZGljZXNfNDoKc3RvcmUgNApzdG9yZSAzCmludGNfMCAvLyAwCnN0b3JlIDEyCnJvbGxkaWNlc180X2wxOgpsb2FkIDEyCnB1c2hpbnQgMTAwMCAvLyAxMDAwCmdsb2JhbCBNaW5UeG5GZWUKLwo8CmJueiByb2xsZGljZXNfNF9sOApsb2FkIDMKdHhuYXMgQXBwbGljYXRpb25zCmJ5dGVjXzAgLy8gImJlYWNvbl9hcHBfaWQiCmFwcF9nbG9iYWxfZ2V0Cj09Ci8vIFdyb25nIFJhbmRvbW5lc3MgQmVhY29uIEFwcCBJRC4KYXNzZXJ0CmxvYWQgNAppbnRjXzAgLy8gMApleHRyYWN0X3VpbnQxNgpzdG9yZSAxMApsb2FkIDEwCnB1c2hpbnQgMTQgLy8gMTQKPD0KLy8gVG9vIG1hbnkgZGljZXMuIE1heCBkaWNlcyBwZXIgcm9sbDogMTQuCmFzc2VydAppbnRjXzEgLy8gMQpzdG9yZSA3CmludGNfMCAvLyAwCnN0b3JlIDUKcm9sbGRpY2VzXzRfbDM6CmxvYWQgNQpsb2FkIDQKaW50Y18wIC8vIDAKZXh0cmFjdF91aW50MTYKc3RvcmUgMTAKbG9hZCAxMAo8CmJueiByb2xsZGljZXNfNF9sNwpsb2FkIDcKaXRvYgpzdG9yZSA4CmNhbGxzdWIgZ2V0cmFuZG9tbmVzc18xCmxvYWQgOApiJQpzdG9yZSA4CmxvYWQgOApidG9pCnN0b3JlIDcKbG9hZCA0CmludGNfMCAvLyAwCmV4dHJhY3RfdWludDE2CnN0b3JlIDEwCmxvYWQgMTAKc3RvcmUgMTMKbG9hZCAxMwpwdXNoaW50IDY1NTM2IC8vIDY1NTM2CjwKYXNzZXJ0CmxvYWQgMTMKaXRvYgpleHRyYWN0IDYgMApzdG9yZSA5CmludGNfMCAvLyAwCnN0b3JlIDUKcm9sbGRpY2VzXzRfbDU6CmxvYWQgNQpsb2FkIDQKaW50Y18wIC8vIDAKZXh0cmFjdF91aW50MTYKc3RvcmUgMTAKbG9hZCAxMAo8CmJ6IHJvbGxkaWNlc180X2w5CmxvYWQgNAppbnRjXzEgLy8gMQpsb2FkIDUKKgppbnRjXzMgLy8gMgorCmdldGJ5dGUKc3RvcmUgMTEKbG9hZCAxMQpzdG9yZSA2CmxvYWQgNwpsb2FkIDYKJQppbnRjXzEgLy8gMQorCnN0b3JlIDE0CmxvYWQgMTQKcHVzaGludCAyNTYgLy8gMjU2CjwKYXNzZXJ0CmxvYWQgOQpwdXNoYnl0ZXMgMHgwMCAvLyAweDAwCmludGNfMCAvLyAwCmxvYWQgMTQKc2V0Ynl0ZQpjb25jYXQKc3RvcmUgOQpsb2FkIDcKbG9hZCA2Ci8Kc3RvcmUgNwpsb2FkIDUKaW50Y18xIC8vIDEKKwpzdG9yZSA1CmIgcm9sbGRpY2VzXzRfbDUKcm9sbGRpY2VzXzRfbDc6CmxvYWQgNAppbnRjXzEgLy8gMQpsb2FkIDUKKgppbnRjXzMgLy8gMgorCmdldGJ5dGUKc3RvcmUgMTEKbG9hZCAxMQpzdG9yZSA2CmxvYWQgNgpjYWxsc3ViIGlzdmFsaWRmYWNlc18yCi8vIE51bWJlciBvZiBmYWNlcyBtdXN0IGJlIGVxdWFsIHRvIHJlYWwgaWRlYWwgZGljZXMuCmFzc2VydApsb2FkIDcKbG9hZCA2CioKc3RvcmUgNwpsb2FkIDUKaW50Y18xIC8vIDEKKwpzdG9yZSA1CmIgcm9sbGRpY2VzXzRfbDMKcm9sbGRpY2VzXzRfbDg6Cml0eG5fYmVnaW4KaW50Y18yIC8vIGFwcGwKaXR4bl9maWVsZCBUeXBlRW51bQppbnRjXzAgLy8gMAppdHhuX2ZpZWxkIEZlZQpwdXNoaW50IDUgLy8gRGVsZXRlQXBwbGljYXRpb24KaXR4bl9maWVsZCBPbkNvbXBsZXRpb24KYnl0ZWNfMiAvLyAweDA2ODEwMQppdHhuX2ZpZWxkIEFwcHJvdmFsUHJvZ3JhbQpieXRlY18yIC8vIDB4MDY4MTAxCml0eG5fZmllbGQgQ2xlYXJTdGF0ZVByb2dyYW0KaXR4bl9zdWJtaXQKbG9hZCAxMgppbnRjXzEgLy8gMQorCnN0b3JlIDEyCmIgcm9sbGRpY2VzXzRfbDEKcm9sbGRpY2VzXzRfbDk6CnR4biBTZW5kZXIKYnl0ZWNfMSAvLyAicmFuZG9tbmVzc19yb3VuZCIKaW50Y18wIC8vIDAKYXBwX2xvY2FsX3B1dApsb2FkIDkKcmV0c3ViCgovLyBjcmVhdGUKY3JlYXRlXzU6CnN0b3JlIDE5CnR4biBHbG9iYWxOdW1VaW50CmludGNfMSAvLyAxCj09Ci8vIFdyb25nIEdsb2JhbCBTdGF0ZSBTY2hlbWEuIE11c3QgYmU6IDEgdWludC4KYXNzZXJ0CnR4biBHbG9iYWxOdW1CeXRlU2xpY2UKaW50Y18wIC8vIDAKPT0KLy8gV3JvbmcgR2xvYmFsIFN0YXRlIFNjaGVtYS4gTXVzdCBiZTogMCBieXRlIHNsaWNlcy4KYXNzZXJ0CnR4biBMb2NhbE51bVVpbnQKaW50Y18xIC8vIDEKPT0KLy8gV3JvbmcgTG9jYWwgU3RhdGUgU2NoZW1hLiBNdXN0IGJlOiAxIHVpbnQuCmFzc2VydAp0eG4gTG9jYWxOdW1CeXRlU2xpY2UKaW50Y18wIC8vIDAKPT0KLy8gV3JvbmcgTG9jYWwgU3RhdGUgU2NoZW1hLiBNdXN0IGJlOiAwIGJ5dGUgc2xpY2VzLgphc3NlcnQKaW50Y18wIC8vIDAKYnl0ZWNfMCAvLyAiYmVhY29uX2FwcF9pZCIKYXBwX2dsb2JhbF9nZXRfZXgKc3RvcmUgMjEKc3RvcmUgMjAKbG9hZCAyMQohCi8vIEFsZ29EaWNlcyBBcHAgYWxyZWFkeSBjcmVhdGVkIQphc3NlcnQKbG9hZCAxOQp0eG5hcyBBcHBsaWNhdGlvbnMKcHVzaGludCAxMTAwOTYwMjYgLy8gMTEwMDk2MDI2Cj09CmxvYWQgMTkKdHhuYXMgQXBwbGljYXRpb25zCnB1c2hpbnQgOTQ3OTU3NzIwIC8vIDk0Nzk1NzcyMAo9PQp8fAovLyBXcm9uZyBSYW5kb21uZXNzIEJlYWNvbiBBcHAgSUQuIE11c3QgYmUgZWl0aGVyOiAxMTAwOTYwMjYgKFRlc3ROZXQpIG9yIDk0Nzk1NzcyMCAoTWFpbk5ldCkuCmFzc2VydAppbnRjXzAgLy8gMApieXRlY18wIC8vICJiZWFjb25fYXBwX2lkIgphcHBfZ2xvYmFsX2dldF9leApzdG9yZSAyMwpzdG9yZSAyMgpsb2FkIDIzCiEKYXNzZXJ0CmJ5dGVjXzAgLy8gImJlYWNvbl9hcHBfaWQiCmxvYWQgMTkKdHhuYXMgQXBwbGljYXRpb25zCmFwcF9nbG9iYWxfcHV0CnJldHN1Yg==",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDgKcHVzaGludCAwIC8vIDAKcmV0dXJu"
    },
    "schema": {
        "local": {
            "declared": {
                "randomness_round": {
                    "type": "uint64",
                    "key": "randomness_round",
                    "descr": "The round this account committed to, for future randomness."
                }
            },
            "reserved": {}
        },
        "global": {
            "declared": {
                "beacon_app_id": {
                    "type": "uint64",
                    "key": "beacon_app_id",
                    "descr": "The App ID of the Randomness Beacon. Must adhere to ARC-21."
                }
            },
            "reserved": {}
        }
    },
    "contract": {
        "name": "AlgoDices",
        "methods": [
            {
                "name": "book_dices_roll",
                "args": [
                    {
                        "type": "uint64",
                        "name": "future_round",
                        "desc": "Future round booked for dices roll"
                    }
                ],
                "returns": {
                    "type": "void"
                },
                "desc": "Book dices roll for a future round."
            },
            {
                "name": "roll_dices",
                "args": [
                    {
                        "type": "application",
                        "name": "randomness_beacon",
                        "desc": "Randomness Beacon App ID (TestNet: 110096026, MainNet: 947957720)"
                    },
                    {
                        "type": "uint8[]",
                        "name": "dices",
                        "desc": "Array of dices to roll (faces: 2, 4, 6, 8, 10, 12, 20)"
                    }
                ],
                "returns": {
                    "type": "uint8[]",
                    "desc": "Dices roll result."
                },
                "desc": "Roll dices with a given number of faces. Fee: 3 * min_fee."
            },
            {
                "name": "create",
                "args": [
                    {
                        "type": "application",
                        "name": "randomness_beacon",
                        "desc": "Randomness Beacon App ID (TestNet: 110096026, MainNet: 947957720)"
                    }
                ],
                "returns": {
                    "type": "void"
                },
                "desc": "AlgoDices App Create"
            }
        ],
        "networks": {
            "SGO1GKSzyE7IEPItTxCByw9x8FmnrCDexi9/cOUJOiI=": { "appID": 149631769 }
        },
        "desc": "AlgoDices Application"
    }
}
